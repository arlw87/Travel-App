@use "variables";
$inputWidth: 85%;
$padding: 5px;

//text size
$result-text-small: 1.3rem;
$result-text-large: 1.8rem;
$result-text-extra-large: 2rem;

//images
$imageWidth-large: 55%;

$sectionHeight: 100vh;
$translateAmount: 0.25 * $sectionHeight;
$main-element-width: 89%;

//

#form-section {
  height: $sectionHeight;
  //width: 100vw;
  background-color: #eeeeee;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  padding-top: 3%;

  //to help position the error handler
  position: relative;

  > h2 {
    width: variables.$sections-width-small-device;
    font-size: 2em;
    font-weight: 300;
    text-align: center;
    margin: 0 0 3% 0;

    @media (min-width: variables.$mobileLarge) {
      font-size: 2.2em;
      width: variables.$sections-width-medium-mobile;
    }

    @media (min-width: variables.$tablet) {
      font-size: 3em;
    }

    @media (min-width: variables.$small-laptop) {
      font-size: 4em;
    }

    @media (min-width: variables.$tablet) {
      width: 90%;
    }

    em {
      color: variables.$red-1;
    }
  }

  form {
    background-color: #fff;
    border-radius: 2px;
    width: variables.$sections-width-small-device;
    //vh doesnt work when using mobile as screen keyboard shrinks screen and therefore this
    //form
    //height: 30vh;
    height: 245px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    text-align: center;
    margin-bottom: 3%;

    @media (min-width: variables.$mobileLarge) {
      width: variables.$sections-width-medium-mobile;
      max-width: 340px;
    }

    @media (min-width: variables.$tablet) {
      max-width: none;
      width: 85%;
    }

    @media (min-width: variables.$small-laptop) {
      flex-direction: row;
      height: 10vh;
      align-items: center;
      justify-content: space-around;
      font-size: 2rem;
      width: $main-element-width;
    }

    @media (min-width: variables.$medium-laptop) {
      max-width: 1300px;
    }

    button {
      width: $inputWidth;
      margin: 1em 0 0 0;
      font-size: 1em;
      background-color: variables.$red-2;
      border: none;
      color: variables.$red-1;
      padding: 5px;

      @media (min-width: variables.$small-laptop) {
        width: 12%;
        align-self: center;
        margin: 0;
        font-size: 0.9em;
      }

      @media (min-width: variables.$medium-laptop) {
        font-size: 1em;
      }

      &:hover {
        color: #fff;
        background-color: variables.$red-1;
      }
    }
  }
}

#date-div {
  width: $inputWidth;
  display: flex;
  flex-direction: column;

  @media (min-width: variables.$small-laptop) {
    width: 35%;
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
  }

  @media (min-width: variables.$medium-laptop) {
    width: 30%;
  }

  label {
    color: rgb(105, 105, 105);
    text-align: left;
    font-size: 1rem;
    margin: 0.5rem 0;

    @media (min-width: variables.$small-laptop) {
      margin: 0 20px 0 0;
      font-size: 1.5rem;
    }
  }

  input {
    font-size: 1em;
    background-color: #f3f3f3;
    border: none;
    padding: $padding;
  }
}

#dest-div {
  width: $inputWidth;
  display: flex;
  flex-direction: column;

  @media (min-width: variables.$small-laptop) {
    width: 45%;
    margin: 0 0 0 10px;
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
  }

  label {
    color: rgb(105, 105, 105);
    text-align: left;
    font-size: 1rem;
    margin: 0.5rem 0;

    @media (min-width: variables.$small-laptop) {
      margin: 0 20px 0 0;
      font-size: 1.5rem;
    }
  }

  input {
    font-size: 1em;
    background-color: #f3f3f3;
    border: none;
    padding: $padding;

    @media (min-width: variables.$small-laptop) {
      width: 60%;
    }
  }
}

.results {
  //no display property as this is handle be the disply-none and .display-flex
  //classes to allow for the results to be animated in
  width: variables.$sections-width-small-device;
  background-color: #fff;
  flex-direction: column;

  @media (min-width: variables.$mobileLarge) {
    width: variables.$sections-width-medium-mobile;
    max-width: 340px;
  }

  @media (min-width: variables.$tablet) {
    max-width: none;
    width: 85%;
    flex-direction: row;
  }

  @media (min-width: variables.$small-laptop) {
    width: $main-element-width;
  }

  @media (min-width: variables.$medium-laptop) {
    max-width: 1300px;
  }

  .results-image {
    background-image: url(../media/static/testImage.jpg);
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    height: 180px;

    display: flex;
    justify-content: flex-start;
    align-items: flex-start;

    @media (min-width: variables.$tablet) {
      max-width: none;
      width: 60%;
      height: auto;
    }

    @media (min-width: variables.$small-laptop) {
      width: $imageWidth-large;
    }

    .locationHeader {
      background-color: white;
      font-weight: 300;
      font-size: 2.5rem;
      padding: 0 2%;

      @media (min-width: variables.$small-laptop) {
        font-size: 3.5rem;
      }
    }
  }

  .results-text {
    height: 240px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;

    @media (min-width: variables.$tablet) {
      width: 40%;
      height: auto;
      height: 40vh;
    }

    @media (min-width: variables.$small-laptop) {
      width: 100% - $imageWidth-large;
      height: 50vh;
    }

    .results-divider {
      //border: 1px solid grey;
      background-color: lightgray;
      height: 2px;
      width: 80%;
      margin: 0 auto;
    }
  }

  button {
    width: 100%;
    font-size: 1.5em;
    background-color: variables.$red-2;
    border: none;
    color: variables.$red-1;
    padding: 1% 0;

    &:hover {
      color: #fff;
      background-color: variables.$red-1;
    }
  }
}

.weather-section {
  display: flex;
  //border: 1px solid blue;

  //   @media (min-width: variables.$tablet) {
  //     margin: 0 0 auto 0;
  //     justify-content: center;
  //   }

  @media (min-width: variables.$tablet) {
    flex-direction: column;
    align-items: center;
  }

  .weather-icon {
    max-width: 160px;
    height: auto;

    @media (min-width: variables.$small-laptop) {
      width: 160px;
      height: auto;
    }
  }

  .weather-details {
    //border: 1px solid black;
    width: 55%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 0 1vw 0 0;
    h3 {
      //border: 1px solid red;
      font-weight: variables.$textThin;
      font-size: 1.3rem;
      margin: 0 0 10px 0;
      text-align: center;

      @media (min-width: variables.$tablet) {
        width: auto;
      }

      @media (min-width: variables.$small-laptop) {
        font-size: $result-text-large;
      }

      @media (min-width: variables.$medium-laptop) {
        font-size: $result-text-extra-large;
      }
    }

    @media (min-width: variables.$tablet) {
      padding: 0;
    }
  }
}

.temperature-details {
  display: flex;
  //border: 1px solid red;
  align-items: center;

  @media (min-width: variables.$tablet) {
    justify-content: center;
  }

  img {
    height: 30px;
    width: auto;
  }

  h4 {
    margin: 0 5%;
    font-size: $result-text-small;
    font-weight: 300;

    @media (min-width: variables.$small-laptop) {
      font-size: $result-text-large;
    }

    @media (min-width: variables.$medium-laptop) {
      font-size: $result-text-extra-large;
    }
  }
}

.time-to-trip {
  //border: 1px solid red;
  text-align: center;
  display: flex;
  justify-content: center;
  padding: 5px;
  font-size: $result-text-small;
  font-weight: 300;
  margin: 1vh 0 0 0;

  //   @media (min-width: variables.$tablet) {
  //     margin: auto 0 0 0;
  //   }

  @media (min-width: variables.$small-laptop) {
    font-size: $result-text-large;
    margin: 3vh 0 0 0;
  }

  @media (min-width: variables.$medium-laptop) {
    font-size: $result-text-extra-large;
  }

  img {
    height: 25px;
    width: auto;

    @media (min-width: variables.$small-laptop) {
      height: 40px;
    }
  }

  p {
    margin: 0;
  }
}

//For form animation
//Control if result section is visible or not
.display-flex {
  display: flex;
  animation: flexIn 2s;
  opacity: 1;
}

.display-none {
  display: none;
  opacity: 0;
}

@keyframes flexIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

//The title and the form in the form section of the page are set to flex start which means they are
//at the top of the section. A class of transformStartPosition is able to those elements so that they
//appear in the center of the section. Once a user completes a search and the results come back the
//elements will animate back to the top and a results pane will fade into view
.transformStartPosition {
  transform: translateY($translateAmount);
}

.transformEndPosition {
  animation: transformAnimation 2s;
  transform: translateY(0);
}

@keyframes transformAnimation {
  0% {
    transform: translateY($translateAmount);
  }
  100% {
    transform: translateY(0);
  }
}

//loader class
.loader {
  //display: flex;
  //margin: 0 auto;
  border: 16px solid #fff; /* Light grey */
  border-top: 16px solid variables.$red-1;
  border-radius: 50%;
  width: 40px;
  height: 40px;

  @media (min-width: variables.$tablet) {
    width: 60px;
    height: 60px;
  }
  //transform: translateX(100px);
}

.loader-animation-translate-rotate {
  animation: spinTranslate 2s linear infinite;
}

.loader-animation-rotate {
  animation: spin 2s linear infinite;
}

//translate Y has to be done in the animation as if multiple
//transforms apply one will overide the other
@keyframes spinTranslate {
  0% {
    transform: translateY($translateAmount) rotate(0deg);
  }
  100% {
    transform: translateY($translateAmount) rotate(360deg);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
